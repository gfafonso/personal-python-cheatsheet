[0m[1mInitializing modules...[0m
Downloading registry.terraform.io/cloudposse/label/null 0.24.1 for vpc_label...
- vpc_label in .terraform/modules/vpc_label

[0m[1mInitializing the backend...[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Finding hashicorp/aws versions matching "3.42.0"...
- Installing hashicorp/aws v3.42.0...
- Installed hashicorp/aws v3.42.0 (signed by HashiCorp)

Terraform has created a lock file [1m.terraform.lock.hcl[0m to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.[0m

[33m[33mâ•·[0m[0m
[33mâ”‚[0m [0m[1m[33mWarning: [0m[0m[1mExperimental feature "module_variable_optional_attrs" is active[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m[0m  on main.tf line 32, in terraform:
[33mâ”‚[0m [0m  32:   experiments      = [[4mmodule_variable_optional_attrs[0m][0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0mExperimental features are subject to breaking changes in future minor or
[33mâ”‚[0m [0mpatch releases, based on feedback.
[33mâ”‚[0m [0m
[33mâ”‚[0m [0mIf you have feedback on the design of this feature, please open a GitHub
[33mâ”‚[0m [0missue to discuss it.
[33mâ•µ[0m[0m
[0m[0m
[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_vpc.vpc will be created
  + resource "aws_vpc" "vpc" {
      + arn                              = (known after apply)
      + assign_generated_ipv6_cidr_block = false
      + cidr_block                       = "10.0.0.0/16"
      + default_network_acl_id           = (known after apply)
      + default_route_table_id           = (known after apply)
      + default_security_group_id        = (known after apply)
      + dhcp_options_id                  = (known after apply)
      + enable_classiclink               = (known after apply)
      + enable_classiclink_dns_support   = (known after apply)
      + enable_dns_hostnames             = false
      + enable_dns_support               = true
      + id                               = (known after apply)
      + instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      + main_route_table_id              = (known after apply)
      + owner_id                         = (known after apply)
      + tags                             = {
          + "Environment"           = "PROD"
          + "Name"                  = "cvt-usw2-ngfw-prod-vpc"
          + "cvt:application-owner" = "CvT NetOps Team"
          + "cvt:codename"          = "ngfw"
          + "cvt:cost-center"       = "TBD"
          + "cvt:environment"       = "prod"
          + "cvt:hosting-owner"     = "Cloud Engineering Group"
          + "cvt:owner"             = "Julian Foot"
          + "cvt:project"           = "Next-Generation Firewall Virtual Appliance - FortiGate-VM active-passive HA"
          + "cvt:terraform"         = "Yes"
          + "cvt:validated-system"  = "No"
        }
      + tags_all                         = {
          + "Environment"           = "PROD"
          + "Name"                  = "cvt-usw2-ngfw-prod-vpc"
          + "cvt:application-owner" = "CvT NetOps Team"
          + "cvt:codename"          = "ngfw"
          + "cvt:cost-center"       = "TBD"
          + "cvt:environment"       = "prod"
          + "cvt:hosting-owner"     = "Cloud Engineering Group"
          + "cvt:owner"             = "Julian Foot"
          + "cvt:project"           = "Next-Generation Firewall Virtual Appliance - FortiGate-VM active-passive HA"
          + "cvt:terraform"         = "Yes"
          + "cvt:validated-system"  = "No"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + cidr_block = "10.0.0.0/16"
  + id         = (known after apply)
  + name       = "cvt-usw2-ngfw-prod-vpc"
  + vpc        = {
      + id   = (known after apply)
      + name = "cvt-usw2-ngfw-prod-vpc"
    }

Warning: Experimental feature "module_variable_optional_attrs" is active

  on main.tf line 32, in terraform:
  32:   experiments      = [module_variable_optional_attrs]

Experimental features are subject to breaking changes in future minor or
patch releases, based on feedback.

If you have feedback on the design of this feature, please open a GitHub
issue to discuss it.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

Saved the plan to: vpc-planfile

To perform exactly these actions, run the following command to apply:
    terraform apply "vpc-planfile"
